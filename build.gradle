buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle.forge'
//Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.


ext.configFile = file('gradle.properties')
ext.config = parseConfig(configFile)

def build_number = 'CUSTOM'

if (build_number == 'CUSTOM')
    build_number = mod_build

version = "${mod_version}-${mod_state}${build_number}"
group = package_group // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = mod_name

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = "${mc_version}-${forge_version}"
    runDir = "run"

    replace "@VERSION@", project.version
    replaceIn "Reference.java"

    replace "@BUILD@", build_number
    replaceIn "Reference.java"

    if (project.hasProperty('mappings_version'))
    mappings = project.mappings_version
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
    compile fileTree(dir: 'libs', include: '*.jar')

}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        include '**/*.properties'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

version = "${project.minecraft.version}-${version}"

jar {
    classifier = ''
    manifest.mainAttributes(
            "Built-By": System.getProperty('user.name'),
            "Created-By": "${System.getProperty('java.vm.version')} + (${System.getProperty('java.vm.vendor')})",
            "Implementation-Title": project.name,
            "Implementation-Version": project.version,
            //"Git-Hash": gitHash,
            "Built-On": "${mc_version}-${forge_version}"
    )
}

task incrementBuildNumber {
    config.mod_build = (config.mod_build.toString().toInteger()) + 1
    configFile.withWriter {
        config.toProperties().store(it, "")
    }
}

def parseConfig(File config) {
    config.withReader {
        def prop = new Properties()
        prop.load(it)
        return (new ConfigSlurper().parse(prop))
    }
}

defaultTasks 'clean', 'build', 'incrementBuildNumber'